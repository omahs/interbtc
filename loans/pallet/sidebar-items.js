initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"struct":[["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["AccountBorrows","Mapping of account addresses to outstanding borrow balances CurrencyId -> Owner -> BorrowSnapshot"],["AccountDeposits","Mapping of account addresses to deposit details CollateralType -> Owner -> Deposits"],["AccountEarned","Mapping of account addresses to total deposit interest accrual CurrencyId -> Owner -> EarnedSnapshot"],["BorrowIndex","Accumulator of the total earned interest rate since the opening of the market CurrencyId -> u128"],["BorrowRate","Mapping of borrow rate to currency type"],["ExchangeRate","The exchange rate from the underlying to the internal collateral"],["LastAccruedInterestTime","The timestamp of the last calculation of accrued interest"],["Markets","Mapping of asset id to its market"],["MaxExchangeRate","The maximum allowed exchange rate for a market."],["MinExchangeRate","The minimum allowed exchange rate for a market."],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["RewardAccrued","The reward accrued but not yet transferred to each user."],["RewardBorrowSpeed","Mapping of token id to borrow reward speed"],["RewardBorrowState","The Reward market borrow state for each market"],["RewardBorrowerIndex","The Reward index for each market for each borrower as of the last time they accrued Reward"],["RewardSupplierIndex","The Reward index for each market for each supplier as of the last time they accrued Reward"],["RewardSupplySpeed","Mapping of token id to supply reward speed"],["RewardSupplyState","The Reward market supply state for each market"],["SupplyRate","Mapping of supply rate to currency type"],["TotalBorrows","Total amount of outstanding borrows of the underlying in this market CurrencyId -> Balance"],["TotalReserves","Total amount of reserves of the underlying held in this market CurrencyId -> Balance"],["UnderlyingAssetId","Mapping of lend_token id to asset id `lend_token id`: voucher token id `asset id`: underlying token id"],["UtilizationRatio","Borrow utilization ratio"]]});